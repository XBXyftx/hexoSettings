if theme.aside.card_visitor_info.enable
  .card-widget.card-info.visitor-info
    .card-content
      .visitor-welcome
        i.fas.fa-heart
        span#visitor-text 欢迎来访！
      .visitor-details
        .visitor-location
          i.fas.fa-map-marker-alt
          span#visitor-location-text 正在获取位置信息...
        .visitor-ip
          i.fas.fa-globe
          span IP地址: 
          span#visitor-ip-text 获取中...
        .visitor-distance
          i.fas.fa-route
          span#visitor-distance-text 距离博主 加载中...
        .visitor-tip
          i.fas.fa-moon
          span#visitor-tip-text 晚上好，夜生活嗨起来！

    script.
      // 访问者信息获取
      (function() {
        // IP地址获取API列表（按优先级排序）
        const ipApis = [
          'https://api.ip.sb/geoip',
          'https://ipapi.co/json/',
          'https://freegeoip.app/json/',
          'https://ipinfo.io/json'
        ];
        
        let currentApiIndex = 0;
        
        function tryGetLocation() {
          if (currentApiIndex >= ipApis.length) {
            // 所有API都失败了，显示错误信息
            handleError('所有IP服务都无法访问');
            return;
          }
          
          const currentApi = ipApis[currentApiIndex];
          
          fetch(currentApi)
            .then(response => {
              if (!response.ok) throw new Error(`HTTP ${response.status}`);
              return response.json();
            })
            .then(data => {
              processLocationData(data, currentApi);
            })
            .catch(error => {
              console.warn(`API ${currentApi} 失败:`, error);
              currentApiIndex++;
              setTimeout(tryGetLocation, 1000); // 1秒后尝试下一个API
            });
        }
        
        function processLocationData(data, apiUrl) {
          let country, region, city, ip, latitude, longitude;
          
          // 根据不同API格式处理数据
          if (apiUrl.includes('ip.sb')) {
            country = data.country || '未知';
            region = data.region || '未知';
            city = data.city || '未知';
            ip = data.ip || '未知';
            latitude = data.latitude;
            longitude = data.longitude;
          } else if (apiUrl.includes('ipapi.co')) {
            country = data.country_name || '未知';
            region = data.region || '未知';
            city = data.city || '未知';
            ip = data.ip || '未知';
            latitude = data.latitude;
            longitude = data.longitude;
          } else if (apiUrl.includes('freegeoip.app')) {
            country = data.country_name || '未知';
            region = data.region_name || '未知';
            city = data.city || '未知';
            ip = data.ip || '未知';
            latitude = data.latitude;
            longitude = data.longitude;
          } else if (apiUrl.includes('ipinfo.io')) {
            country = data.country || '未知';
            const loc = data.region || '未知';
            region = loc;
            city = data.city || '未知';
            ip = data.ip || '未知';
            if (data.loc) {
              const coords = data.loc.split(',');
              latitude = parseFloat(coords[0]);
              longitude = parseFloat(coords[1]);
            }
          }
          
          // 更新IP地址
          document.getElementById('visitor-ip-text').textContent = ip;
          
          // 更新位置信息和欢迎文字
          let locationText = '';
          if (country === '中国' || country === 'China' || country === 'CN') {
            locationText = `${region} ${city}`;
                          document.getElementById('visitor-text').innerHTML = `欢迎来自 ${region} ${city} 的朋友♥️`;
          } else {
            locationText = `${country} ${region}`;
            document.getElementById('visitor-text').innerHTML = `欢迎来自 ${country} 的朋友♥️`;
          }
          document.getElementById('visitor-location-text').textContent = locationText;
          
          // 计算距离（可配置博主位置）
          if (latitude && longitude && !isNaN(latitude) && !isNaN(longitude)) {
            const bloggerLat = 39.9042; // 北京纬度
            const bloggerLng = 116.4074; // 北京经度
            const distance = calculateDistance(latitude, longitude, bloggerLat, bloggerLng);
            
            if (distance < 1) {
              document.getElementById('visitor-distance-text').textContent = `距离博主 ${(distance * 1000).toFixed(0)} 米！`;
            } else if (distance < 100) {
              document.getElementById('visitor-distance-text').textContent = `距离博主 ${distance.toFixed(1)} 公里！`;
            } else {
              document.getElementById('visitor-distance-text').textContent = `距离博主 ${distance.toFixed(0)} 公里！`;
            }
          } else {
            document.getElementById('visitor-distance-text').textContent = '距离计算中...';
          }
          
          // 根据时间设置问候语
          updateGreeting();
        }
        
        function updateGreeting() {
          const now = new Date();
          const hour = now.getHours();
          let greeting = '';
          let icon = 'fas fa-sun';
          
          if (hour >= 6 && hour < 12) {
            greeting = '上午好，新的一天开始了！';
            icon = 'fas fa-sun';
          } else if (hour >= 12 && hour < 14) {
            greeting = '中午好，记得吃午饭哦！';
            icon = 'fas fa-sun';
          } else if (hour >= 14 && hour < 18) {
            greeting = '下午好，午后时光真美好！';
            icon = 'fas fa-cloud-sun';
          } else if (hour >= 18 && hour < 22) {
            greeting = '晚上好，夜生活嗨起来！';
            icon = 'fas fa-moon';
          } else {
            greeting = '深夜了，注意休息哦！';
            icon = 'fas fa-moon';
          }
          
          const tipElement = document.getElementById('visitor-tip-text');
          const tipIcon = tipElement.parentElement.querySelector('i');
          tipElement.textContent = greeting;
          if (tipIcon) {
            tipIcon.className = icon;
          }
        }
        
        function handleError(message) {
          document.getElementById('visitor-ip-text').textContent = '获取失败';
          document.getElementById('visitor-location-text').textContent = '获取失败';
          document.getElementById('visitor-distance-text').textContent = '距离未知';
          document.getElementById('visitor-text').innerHTML = '欢迎来访！';
          console.error('获取访问者信息失败:', message);
        }
        
        // 计算两点间距离的函数（使用Haversine公式）
        function calculateDistance(lat1, lon1, lat2, lon2) {
          const R = 6371; // 地球半径，单位：千米
          const dLat = deg2rad(lat2 - lat1);
          const dLon = deg2rad(lon2 - lon1);
          const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
                    Math.sin(dLon/2) * Math.sin(dLon/2);
          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
          return R * c;
        }
        
        function deg2rad(deg) {
          return deg * (Math.PI/180);
        }
        
        // 启动获取位置信息
        tryGetLocation();
        
        // 每分钟更新一次问候语
        setInterval(updateGreeting, 60000);
      })(); 